//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Agnus.Domain.Models
{
    using Agnus.Domain.Models.Enum;
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations.Schema;

    [Table("GrupoAprovacao")]
    public partial class GrupoAprovacao : KeyAuditableEntity, IWorkFlowEntity
    {
        public GrupoAprovacao()
        {
            this.OrcamentoTotal = new HashSet<OrcamentoTotal>();
            this.WorkFlowEntitys = new HashSet<WorkFlowEntity>();
        }
        
        public DateTime DataStatusOrcamento { get; set; }
        public decimal ValorOrcamentoAprovar { get; set; }        

        [ForeignKey("StatusOrcamento")]
        public long IdStatusOrcamento { get; set; }
        public virtual ConteudoTabelaDominio StatusOrcamento { get; set; }

        [ForeignKey("TipoOrcamento")]
        public long IdTipoOrcamento { get; set; }
        public virtual ConteudoTabelaDominio TipoOrcamento { get; set; }

        [ForeignKey("ProjetoOrcamento")]
        public long IdProjetoOrcamento { get; set; }
        public virtual ProjetoOrcamento ProjetoOrcamento { get; set; }

        public virtual ICollection<OrcamentoTotal> OrcamentoTotal { get; set; }

        public long IdEntity
        {
            get { return this.Id; }
        }

        public ItemOrcamento ItemOrcamentoEntity
        {
            get { return null; }
        }

        public decimal ValorUsoEntity
        {
            get { return this.ValorOrcamentoAprovar; }
        }

        public int CodObjetoUso
        {
            get { return default(int); }
        }

        public void SetStatusPai(ConteudoTabelaDominio StatusPai)
        {
            if (this.TipoOrcamento.Codigo == (int)TipoOrcamentoEnum.Original)
                this.ProjetoOrcamento.StatusOrcamento = StatusPai;
        }

        public void SetStatusItem(ConteudoTabelaDominio StatusItem, bool updateDataStatus)
        {
            this.StatusOrcamento = StatusItem;
            if(this.TipoOrcamento.Codigo == (int)TipoOrcamentoEnum.Original)
                this.ProjetoOrcamento.StatusOrcamento = StatusItem;
            if (updateDataStatus)
                this.DataStatusOrcamento = DateTime.Now;
        }

        public int GetCodStatusItemBy(Enum.ParecerAprovacaoEnum idParecer)
        {
            switch (idParecer)
            {
                case ParecerAprovacaoEnum.Aprovado:
                    return (int)StatusOrcamentoEnum.Aprovado;
                case ParecerAprovacaoEnum.Reprovado:
                    return (int)StatusOrcamentoEnum.Recusado;
                case ParecerAprovacaoEnum.EmAprovacao:
                    return (int)StatusOrcamentoEnum.EmAprovacao;
                //case ParecerAprovacaoEnum.Revisar:
                //    return (int)StatusOrcamentoEnum;
                default:
                    break;
            }
            throw new Exception("Não foi possível encontrar um status para este item!");
        }

        public int StatusAprovado
        {
            get { return (int)StatusOrcamentoEnum.Aprovado; }
        }

        public int StatusEmAprovacao
        {
            get { return (int)StatusOrcamentoEnum.EmAprovacao; }
        }

        public int StatusReprovado
        {
            get { return (int)StatusOrcamentoEnum.Recusado; }
        }

        public int StatusDominioPai
        {
            get { return (int)DominioGenericoEnum.StatusOrcamento; }
        }

        public int StatusCodPaiFinalizado
        {
            get { return (int)StatusOrcamentoEnum.Encerrado; }
        }

        [NotMapped]
        public decimal _ValorOrcamentoTotal { get { return this.ValorOrcamentoAprovar + (this.ProjetoOrcamento.ValorTotalOrcamento.HasValue ? this.ProjetoOrcamento.ValorTotalOrcamento.Value : 0); } }

        public virtual ICollection<WorkFlowEntity> WorkFlowEntitys { get; set; }
    }
}
